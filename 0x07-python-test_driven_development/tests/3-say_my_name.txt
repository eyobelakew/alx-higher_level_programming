============================
The ``3-say_my_name`` module
============================

Using ``say_my_name``.

Import function from module:
        >>> say_my_name = __import__('3-say_my_name').say_my_name

Checking for module docstring:
	>>> m = __import__("3-say_my_name").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("3-say_my_name").say_my_name.__doc__
        >>> len(f) > 1
        True

Checking for pep8 style
        >>> import os
        >>> os.popen("pep8 3-say_my_name.py").read()
        ''

Checking for integer:
        >>> say_my_name(1, 2)
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Checking for one argument:
        >>> say_my_name("Daniel")
        My name is Daniel 

Checking firstname= string / lastname= string:
        >>> say_my_name("Daniel", "Almagro")
        My name is Daniel Almagro

Checking for integer in first_name:
        >>> say_my_name(9, "Almagro")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Checking for integer in last_name:
        >>> say_my_name("Daniel", 9)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string

Checking for missing two arguments
        >>> say_my_name()
        Traceback (most recent call last):
	...
        TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Checking for None argument:
        >>> say_my_name(None)
        Traceback (most recent call last):
	...
        TypeError: first_name must be a string
