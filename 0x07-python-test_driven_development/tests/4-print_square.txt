============================
The ``4-print_square`` module
============================

Using ``print_square``.

Import function from module:
        >>> print_square = __import__('4-print_square').print_square

Checking for module docstring:
	>>> m = __import__("4-print_square").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("4-print_square").print_square.__doc__
        >>> len(f) > 1
        True

Checking for pep8 style
        >>> import os
        >>> os.popen("pep8 4-print_square.py").read()
        ''

Checking for string:
        >>> print_square("Hello")
        Traceback (most recent call last):
	...
        TypeError: size must be an integer

Checking for case 0:
        >>> print_square(0)
        Traceback (most recent call last)
        ...
        ValueError: size must be >= 0

Checking for case -2:
        >>> print_square(-2)
        Traceback (most recent call last)
        ...
        ValueError: size must be >= 0

Checking for case "3":
        >>> print_square("3")
        Traceback (most recent call last):
	...
        TypeError: size must be an integer

Checking for a valid case:
        >>> print_square(3)
        ###
        ###
        ###

Checking for size= not integer:
        >>> print_square(2.4)
        Traceback (most recent call last):
	...
        TypeError: size must be an integer

Checking for missing one argument:
        >>> print_square()
        Traceback (most recent call last):
	...
        TypeError: print_square() missing 1 required positional argument: 'size'


