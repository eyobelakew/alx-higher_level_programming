============================
The ``2-matrix_divided`` module
============================

Using ``matrix_divided``.

Import function from module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Checking for module docstring:
	>>> m = __import__("2-matrix_divided").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(f) > 1
        True

Checking for matrix as list:
	>>> matrix = "Hello"
	>>> matrix_divided(matrix, 1)
	Traceback (most recent call last):
    	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Checking for list of mixed list and non-list items:
	>>> matrix = [[1, 2, 3], "Hello"]
	>>> matrix_divided(matrix, 1)
	Traceback (most recent call last):
    	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for uneven matrix:
	>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
    	...
	TypeError: Each row of the matrix must have the same size

Checking for div as non-number:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "A")
	Traceback (most recent call last):
    	...
	TypeError: div must be a number

Checking for mix if int, float, and non-number type:
	>>> matrix = [[1, "H", 3], [4.1, 5, 6.8]]
	>>> matrix_divided(matrix, 11)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for passing List of Lists of integers / div= integer:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Checking List of Lists of integers / div= 0:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Checking list of lists of integers / div= float(inf):
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, float('inf'))
	Traceback (most recent call last):
	...
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Checking missing one argument:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Checking for more than 2 arguments:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 1, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Checking regular test:
	>>> matrix = [[4, 4, 4], [4, 4, 4]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	[[2, 2, 2], [2, 2, 2]]

Checking for pep8 style
	>>> import os
        >>> os.popen("pep8 2-matrix_divided.py").read()
        ''
